/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/functions.js */ \"./src/js/modules/functions.js\");\n/* harmony import */ var _modules_ibg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/ibg.js */ \"./src/js/modules/ibg.js\");\n/* harmony import */ var _modules_validationForms_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/validationForms.js */ \"./src/js/modules/validationForms.js\");\n\r\n\r\n;\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', (e) => {\r\n\t//image by background\r\n\t(0,_modules_ibg_js__WEBPACK_IMPORTED_MODULE_1__.ibg)();\r\n\t//burgerMenu\r\n\t_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.burgerMenu();\r\n\t_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.fullScreenIE();\r\n\t_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.isWebp();\r\n\t(0,_modules_validationForms_js__WEBPACK_IMPORTED_MODULE_2__.validateForm)();\r\n\r\n\t//menu burgerMenuСolor\r\n\tconst burgerButton = document.querySelector('.header__burger');\r\n\tburgerButton.addEventListener('click', () => {\r\n\t\tconst listWrapper = document.querySelectorAll('[data-lineEffect ]');\r\n\t\tif (window.matchMedia(\"(max-width: 767.98px)\").matches) {\r\n\t\t\tlistWrapper.length ? burgerColor(listWrapper) : null;\r\n\t\t}\r\n\t});\r\n\r\n\tfunction burgerColor(listWrapper) {\r\n\t\tlistWrapper.forEach(list => {\r\n\t\t\tconst links = list.querySelectorAll('a');\r\n\t\t\tconst effectSpeed = list.dataset.lineEffect ? list.dataset.lineEffect : 0.4;\r\n\t\t\tlinks ? startEffect(links, effectSpeed) : null;\r\n\t\t});\r\n\t}\r\n\r\n\tfunction startEffect(links, effectSpeed) {\r\n\t\tconst effectTransition = `transition: transform ${effectSpeed}s ease;`;\r\n\t\tconst effectHover = `transform: translate3d(0%, 0px, 0px);`;\r\n\t\tconst effectleft = `transform: translate3d(-100%,  0px, 0px);`;\r\n\t\tconst effectRight = `transform: translate3d(100%, 0px, 0px);`;\r\n\t\tlinks.forEach(link => {\r\n\t\t\tlink.insertAdjacentHTML('beforeend', `<span class=\"hover\">\r\n\t\t<span class=\"hover__text\">${link.textContent}</span>\r\n\t\t</span>`);\r\n\t\t\tlink.onmouseenter = link.onmouseleave = menulinkActions;\r\n\t\t});\r\n\r\n\t\tfunction menulinkActions(e) {\r\n\t\t\tconst targetLink = e.target;\r\n\t\t\tconst targetFirstSpan = targetLink.querySelector('.hover');\r\n\t\t\tconst targetSecondSpan = targetLink.querySelector('.hover__text');\r\n\t\t\tconst targetLinkHeight = targetLink.offsetWidth / 4;\r\n\t\t\tconst targetLinkPos = e.pageX - (targetLink.getBoundingClientRect().left + scrollX);\r\n\r\n\t\t\tif (e.type === 'mouseenter') {\r\n\t\t\t\t// присваиваем спанам значения трансформа\r\n\t\t\t\ttargetFirstSpan.style.cssText = targetLinkPos > targetLinkHeight ? effectRight : effectleft;\r\n\t\t\t\ttargetSecondSpan.style.cssText = targetLinkPos > targetLinkHeight ? effectleft : effectRight;\r\n\t\t\t\t// меняем спанам значения трансформа\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\ttargetFirstSpan.style.cssText = effectHover + effectTransition;\r\n\t\t\t\t\ttargetSecondSpan.style.cssText = effectHover + effectTransition;\r\n\t\t\t\t}, 5);\r\n\t\t\t}\r\n\t\t\tif (e.type === 'mouseleave') {\r\n\t\t\t\ttargetFirstSpan.style.cssText = targetLinkPos > targetLinkHeight ? effectleft + effectTransition : effectRight + effectTransition;\r\n\t\t\t\ttargetSecondSpan.style.cssText = targetLinkPos > targetLinkHeight ? effectRight + effectTransition : effectleft + effectTransition;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//filter\r\n\t_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.filter();\r\n});\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"burgerMenu\": () => (/* binding */ burgerMenu),\n/* harmony export */   \"chekIE\": () => (/* binding */ chekIE),\n/* harmony export */   \"filter\": () => (/* binding */ filter),\n/* harmony export */   \"fullScreenIE\": () => (/* binding */ fullScreenIE),\n/* harmony export */   \"isMobile\": () => (/* binding */ isMobile),\n/* harmony export */   \"isWebp\": () => (/* binding */ isWebp)\n/* harmony export */ });\nconst isMobile = {\r\n\tAndroid: function () { return navigator.userAgent.match(/Android/i); },\r\n\tBlackBerry: function () { return navigator.userAgent.match(/BlackBerry/i); },\r\n\tiOS: function () { return navigator.userAgent.match(/iPhone|iPad|iPod/i); },\r\n\tOpera: function () { return navigator.userAgent.match(/Opera Mini/i); },\r\n\tWindows: function () { return navigator.userAgent.match(/IEMobile/i); },\r\n\tany: function () { return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows()); }\r\n};\r\n\r\nfunction isWebp() {\r\n\t// Проверка поддержки webp\r\n\tfunction testWebP(callback) {\r\n\t\tlet webP = new Image();\r\n\t\twebP.src = \"http://www.gstatic.com/webp/gallery/1.webp\";\r\n\r\n\t\twebP.onload = function () {\r\n\t\t\tcallback(webP.height > 0);\r\n\t\t};\r\n\t\twebP.onerror = function () {\r\n\t\t\tcallback(false);\r\n\t\t};\r\n\t}\r\n\t// Добавление класса _webp или _no-webp для HTML\r\n\ttestWebP((support) => {\r\n\t\tlet className = support === true ? 'webp' : 'no-webp';\r\n\t\tdocument.documentElement.classList.add(className);\r\n\t});\r\n}\r\n\r\nconst chekIE = () => {\r\n\tlet IE = false;\r\n\t//11\r\n\tconst version11 = window.navigator.userAgent.indexOf('Trident/')\r\n\t//10-\r\n\tconst version10 = window.navigator.userAgent.indexOf('MSIE ')\r\n\tif (version11 > -1 || version10 > -1) {\r\n\t\tIE = true;\r\n\t\treturn IE;\r\n\t}\r\n\treturn IE\r\n}\r\n\r\nfunction fullScreenIE() {\r\n\tlet IE = chekIE()\r\n\tconst wrapper = document.querySelector('.wrapper');\r\n\tif (wrapper && IE) {\r\n\t\twrapper.style.height = 100 + '%';\r\n\t}\r\n}\r\n\r\nfunction burgerMenu() {\r\n\tconst burgerButton = document.querySelector('.header__burger');\r\n\tconst burgerMenu = document.querySelector('.header__menu');\r\n\tconst headerPadding = document.querySelector('.about__header');\r\n\tif (burgerButton) {\r\n\t\tburgerButton.addEventListener('click', () => {\r\n\t\t\theaderPadding.classList.toggle('active')\r\n\t\t\tburgerButton.classList.toggle('active')\r\n\t\t\t_slideToggle(burgerMenu)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nlet _slideDown = (target, duration = 500) => {\r\n\tif (!target.classList.contains('slide')) {\r\n\t\ttarget.classList.add('slide', 'active');\r\n\t\ttarget.style.removeProperty('display');\r\n\t\t//блок проверки display на \"none\"\r\n\t\tlet display = window.getComputedStyle(target).display;\r\n\t\tif (display === 'none')\r\n\t\t\tdisplay = 'block';\r\n\t\ttarget.style.display = display;\r\n\t\tlet height = target.offsetHeight;\r\n\t\t//без этого ствойства криво отображаются рамки при открытии\r\n\t\ttarget.style.overflow = 'hidden';\r\n\t\t//временно навешенные свойства для анимации\r\n\t\ttarget.style.height = 0;\r\n\t\ttarget.style.paddingTop = 0;\r\n\t\ttarget.style.paddingBottom = 0;\r\n\t\ttarget.style.marginTop = 0;\r\n\t\ttarget.style.marginBottom = 0;\r\n\t\ttarget.offsetHeight;\r\n\t\ttarget.style.transitionProperty = \"height, margin, padding\";\r\n\t\ttarget.style.transitionDuration = duration + 'ms';\r\n\t\ttarget.style.height = height + 'px';\r\n\t\t//удалаеят временно навешенные свойства для анимации. С задержкой нельзя, т.к.\r\n\t\t//срузу обнулятся padding and margen\r\n\t\ttarget.style.removeProperty('padding-top');\r\n\t\ttarget.style.removeProperty('padding-bottom');\r\n\t\ttarget.style.removeProperty('margin-top');\r\n\t\ttarget.style.removeProperty('margin-bottom');\r\n\t\t//Этот блок не обязателен, он удаляет навешенные свойства из консоли и из css\r\n\t\twindow.setTimeout(() => {\r\n\t\t\ttarget.style.removeProperty('height');\r\n\t\t\ttarget.style.removeProperty('overflow');\r\n\t\t\ttarget.style.removeProperty('transition-duration');\r\n\t\t\ttarget.style.removeProperty('transition-property');\r\n\t\t\ttarget.classList.remove('slide');\r\n\t\t}, duration);\r\n\t}\r\n}\r\n\r\n//Закрывает спойлер\r\nlet _slideUp = (target, duration = 500) => {\r\n\tif (!target.classList.contains('slide')) {\r\n\t\ttarget.classList.add('slide', 'active');\r\n\t\ttarget.style.transitionProperty = 'height, margin, padding';\r\n\t\ttarget.style.transitionDuration = duration + 'ms';\r\n\t\ttarget.style.height = target.offsetHeight + 'px';\r\n\t\ttarget.offsetHeight;\r\n\t\t//без этого ствойства криво отображаются рамки при закрытии\r\n\t\ttarget.style.overflow = 'hidden';\r\n\t\t//временно навешенные свойства для анимации\r\n\t\ttarget.style.height = 0;\r\n\t\ttarget.style.paddingTop = 0;\r\n\t\ttarget.style.paddingBottom = 0;\r\n\t\ttarget.style.marginTop = 0;\r\n\t\ttarget.style.marginBottom = 0;\r\n\t\t//Этот блок не обязателен, он удаляет навешенные свойства из консоли и из css\r\n\t\twindow.setTimeout(() => {\r\n\t\t\ttarget.style.display = 'none';\r\n\t\t\t// Эта строчка нужна, что бы убрать стрелку при аккордионе\r\n\t\t\ttarget.style.removeProperty('height');\r\n\t\t\ttarget.style.removeProperty('padding-top');\r\n\t\t\ttarget.style.removeProperty('padding-bottom');\r\n\t\t\ttarget.style.removeProperty('margin-top');\r\n\t\t\ttarget.style.removeProperty('margin-bottom');\r\n\t\t\ttarget.style.removeProperty('overflow');\r\n\t\t\ttarget.style.removeProperty('transition-duration');\r\n\t\t\ttarget.style.removeProperty('transition-property');\r\n\t\t\ttarget.classList.remove('slide', 'active');\r\n\t\t}, duration);\r\n\t}\r\n}\r\nlet _slideToggle = (target, duration = 500) => {\r\n\tif (window.getComputedStyle(target).display === 'none') {\r\n\t\treturn _slideDown(target, duration);\r\n\t} else {\r\n\t\treturn _slideUp(target, duration);\r\n\t}\r\n}\r\n\r\n//filter\r\nfunction filter() {\r\n\tconst links = document.querySelectorAll('.portfolio__link');\r\n\tlinks.forEach(link => {\r\n\t\tlink.dataset.filter\r\n\t\tlink.dataset.filter ? startfilter(link) : null\r\n\t})\r\n\tfunction startfilter(link) {\r\n\t\tconst showCards = document.querySelectorAll('.portfolio__item');\r\n\t\tconst opacityHide = `opacity:0; visibility:hidden; display:none;`\r\n\t\tconst effectTransition = `transition: all 0.3s ease;`;\r\n\t\tlink.addEventListener('click', (e) => {\r\n\t\t\tif (e.target.tagName !== 'LI') {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\tshowCards.forEach(showCard => {\r\n\t\t\t\tshowCard.style.opacity = 1;\r\n\t\t\t\tshowCard.style.visibility = 'visible';\r\n\t\t\t\tshowCard.style.display = 'block';\r\n\t\t\t\tif (!showCard.classList.contains(link.dataset.filter) && link.dataset.filter != 'all') {\r\n\t\t\t\t\tshowCard.style.cssText = opacityHide + effectTransition;\r\n\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n}\n\n//# sourceURL=webpack://gulp/./src/js/modules/functions.js?");

/***/ }),

/***/ "./src/js/modules/ibg.js":
/*!*******************************!*\
  !*** ./src/js/modules/ibg.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ibg\": () => (/* binding */ ibg)\n/* harmony export */ });\n\r\n//картинка фоном========================================================================================================================\r\nfunction ibg() {\r\n\tlet imgbackround = document.querySelectorAll(\".ibg\");\r\n\tif (imgbackround.length > 0) {\r\n\t\timgbackround.forEach(imgbg => imgbg.style.backgroundImage = 'url(' + imgbg.querySelector('img').getAttribute('src') + ')');\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/ibg.js?");

/***/ }),

/***/ "./src/js/modules/validationForms.js":
/*!*******************************************!*\
  !*** ./src/js/modules/validationForms.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"validateForm\": () => (/* binding */ validateForm)\n/* harmony export */ });\n\r\n\r\n// data-value=\"\" - для обнудления полей and placeholder\r\n// data-error=\"ошибка\" - для текста ошибки в доп. элементе\r\n// req - класс для валидируемых полей\r\n// form__error - класс созадется для блока с ошибочным текстом\r\n// email - класс для валидации почты\r\n// goto-error - класс переход к ошибке, вешается на форму\r\n\r\n// начало работы до загрузки картинок\r\nfunction validateForm() {\r\n\t// собираем все формы\r\n\tlet forms = document.querySelectorAll('form');\r\n\tif (forms.length > 0) {\r\n\t\tforms.forEach(form => {\r\n\t\t\tform.addEventListener('submit', form_submit);\r\n\t\t})\r\n\t}\r\n}\r\nasync function form_submit(e) {\r\n\te.preventDefault();\r\n\t// нажатая кнопка отправить\r\n\tlet btn = e.target;\r\n\t// форма нажатой кнопки\r\n\tlet form = btn.closest('form');\r\n\t// предпросмотр для файла\r\n\tconst formPrev = document.querySelector('.file__preview');\r\n\t// подсчет ошибок\r\n\tlet error = getErrors(form);\r\n\tif (error === 0) {\r\n\t\t// создаем форм-дату\r\n\t\tlet formData = new FormData(form);\r\n\t\t// очищаем форму\r\n\t\tform_clean(form);\r\n\t\t// вешаем окно при долгой отправке\r\n\t\tconst formAction = form.getAttribute('action') ? form.getAttribute('action').trim() : '#';\r\n\t\tconst formMethod = form.getAttribute('method') ? form.getAttribute('method').trim() : 'GET';\r\n\t\tform.classList.add('sending');\r\n\t\tlet response = await fetch(formAction, {\r\n\t\t\tmethod: formMethod,\r\n\t\t\tbody: formData\r\n\t\t});\r\n\t\tif (response.ok) {\r\n\t\t\tlet result = await response.json();\r\n\t\t\tconsole.log(result.message)\r\n\t\t\tformPrev.innerHTML = '';\r\n\t\t\tform.classList.remove('sending');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpopup('response not ok');\r\n\t\t\tform.classList.remove('sending');\r\n\t\t}\r\n\t} else {\r\n\t\t// вызываем попап или скролл к блоку\r\n\t\tpopup('Necessary fildes is not fiil')\r\n\t\tlet form_error = form.querySelectorAll('.error');\r\n\t\tif (form_error && form.classList.contains('goto-error')) {\r\n\t\t\tsmoothScroll(form_error[0])\r\n\t\t}\r\n\t\t// данный блок здесь кукует, что бы моментальная валидация включалаась после первой попытки неверной отправки, и не бесила сразу\r\n\t\tlet inputs = document.querySelectorAll('input[data-value],textarea[data-value]')\r\n\t\tinputs.forEach(input => {\r\n\t\t\tinput.addEventListener('blur', function (e) {\r\n\t\t\t\tif (input.value == '') {\r\n\t\t\t\t\tinput.value = dataValue;\r\n\t\t\t\t\tinput_focus_remove(input);\r\n\t\t\t\t\tif (input.getAttribute('data-type') === \"pass\") {\r\n\t\t\t\t\t\tinput.setAttribute('type', 'text');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Моментальная валидация\r\n\t\t\t\tif (input.hasAttribute('data-validate')) {\r\n\t\t\t\t\tlet form = input.closest('form')\r\n\t\t\t\t\tformValidate(form);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// Действия после отправки формы\r\nfunction formSent(form) {\r\n\t// Создаем событие отправки формы\r\n\tdocument.dispatchEvent(new CustomEvent(\"formSent\", {\r\n\t\tdetail: {\r\n\t\t\tform: form\r\n\t\t}\r\n\t}));\r\n\t// Показываем попап, если подключен модуль попапов \r\n\t// и для формы указана настройка\r\n\tsetTimeout(() => {\r\n\t\tif (flsModules.popup) {\r\n\t\t\tconst popup = form.dataset.popupMessage;\r\n\t\t\tpopup ? flsModules.popup.open(popup) : null;\r\n\t\t}\r\n\t}, 0);\r\n\t// Очищаем форму\r\n\tformValidate.formClean(form);\r\n\t// Сообщаем в консоль\r\n\tformLogging(`Форма отправлена!`);\r\n}\r\n\r\n// проверка на скрытие input\r\nfunction getErrors(form) {\r\n\tlet error = 0\r\n\tlet formRequiredItems = form.querySelectorAll('.req');\r\n\tif (formRequiredItems.length) {\r\n\t\tformRequiredItems.forEach(formRequiredItem => {\r\n\t\t\tif ((formRequiredItem.offsetParent !== null || formRequiredItem.tagName === \"SELECT\") && !formRequiredItem.disabled) {\r\n\t\t\t\terror += formValidate(form);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn error;\r\n}\r\n\r\n// функция валидации\r\nfunction formValidate(form) {\r\n\tlet error = 0;\r\n\tlet formRequiredItems = form.querySelectorAll('.req');\r\n\tformRequiredItems.forEach(req => {\r\n\t\tformRemoveError(req);\r\n\t\tif ((req).getAttribute(\"name\") == \"email\" || req.classList.contains(\"email\")) {\r\n\t\t\tif (emailTest(req)) {\r\n\t\t\t\tformAddError(req);\r\n\t\t\t\terror++;\r\n\t\t\t}\r\n\t\t} else if (req.getAttribute('type') === 'checkbox' && !req.checked) {\r\n\t\t\tformAddError(req);\r\n\t\t\terror++;\r\n\t\t} else {\r\n\t\t\tif (!req.value || req.value === ' ' || req.value === req.getAttribute(\"data-value\")) {\r\n\t\t\t\tformAddError(req);\r\n\t\t\t\terror++;\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\treturn error;\r\n}\r\n// тест email\r\nfunction emailTest(req) {\r\n\treturn !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(req.value);\r\n}\r\n// накидываем ошибки\r\nfunction formAddError(req) {\r\n\treq.parentElement.classList.add('error');\r\n\treq.classList.add('error');\r\n\r\n\t// убираем существующий блок с ошибкой, если есть, что бы не плодились=) и создаем блок с ошибкой и текстом\r\n\tlet input_error = req.parentElement.querySelector('.form__error');\r\n\tif (input_error) {\r\n\t\tinput_error.remove();\r\n\t}\r\n\tlet input_error_text = req.getAttribute('data-error');\r\n\tif (input_error_text && input_error_text != '') {\r\n\t\treq.parentElement.insertAdjacentHTML('beforeend', '<div class=\"form__error\">' + input_error_text + '</div>');\r\n\t}\r\n}\r\n\r\nfunction formRemoveError(req) {\r\n\treq.parentElement.classList.remove('error');\r\n\treq.classList.remove('error');\r\n\r\n\t// убираем блок с ошибкой и текстом\r\n\tlet input_error = req.parentElement.querySelector('.form__error');\r\n\tif (input_error) {\r\n\t\tinput_error.remove();\r\n\t}\r\n}\r\n\r\nfunction aploadFile(file) {\r\n\tconst formPrev = document.querySelector('.file__preview');\r\n\tif (!['image/jpeg', 'image/png', 'image/pdf'].includes(file.type)) {\r\n\t\tformPrev.value = '';\r\n\t\tpopup('file type is not correct');\r\n\t\treturn;\r\n\t}\r\n\tif (file.size > 2 * 1024 * 1024) {\r\n\t\tpopup('file is to big');\r\n\t\treturn;\r\n\t}\r\n\t// читаем blob\r\n\tlet reader = new FileReader();\r\n\t// читаем как кодированный URL\r\n\treader.readAsDataURL(file);\r\n\treader.onload = function () {\r\n\t\tformPrev.innerHTML = `<img src='${reader.result}'>`\r\n\t}\r\n\treader.onerror = function () {\r\n\t\tpopup(reader.error);\r\n\t}\r\n}\r\n\r\nfunction form_clean(form) {\r\n\tform.reset();\r\n\tsetTimeout(() => {\r\n\t\tlet inputs = form.querySelectorAll('input[type=\"text\"],input[type=\"password\"],textarea');\r\n\t\tinputs.forEach(inpTextArr => {\r\n\t\t\t// Это для textarrea\r\n\t\t\tinpTextArr.parentElement.classList.remove('focus');\r\n\t\t\tinpTextArr.classList.remove('focus');\r\n\t\t\tinpTextArr.value = inpTextArr.getAttribute('data-value');\r\n\t\t})\r\n\t\t// let checkboxes = form.querySelectorAll('.checkbox__input');\r\n\t\t// if (checkboxes.length > 0) {\r\n\t\t// \tfor (let index = 0; index < checkboxes.length; index++) {\r\n\t\t// \t\tconst checkbox = checkboxes[index];\r\n\t\t// \t\tcheckbox.checked = false;\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tlet selects = form.querySelectorAll('select');\r\n\t\tif (selects.length > 0) {\r\n\t\t\tselects.forEach(select => {\r\n\t\t\t\tconst select_default_value = select.getAttribute('data-default');\r\n\t\t\t\tselect.value = select_default_value;\r\n\t\t\t\tselect_item(select);\r\n\t\t\t})\r\n\t\t}\r\n\t}, 0);\r\n}\r\n// вешаем active и меняем аттрибут с password на text\r\nfunction viewPass(view) {\r\n\tif (view.classList.contains('active')) {\r\n\t\tview.parentElement.querySelector('input').setAttribute(\"type\", \"password\");\r\n\t} else {\r\n\t\tview.parentElement.querySelector('input').setAttribute(\"type\", \"text\");\r\n\t}\r\n\tview.classList.toggle('active');\r\n}\r\n// вешаем классы и снимаем по клику на крестик\r\nfunction popup(text) {\r\n\tconst popup = document.querySelector('.popup');\r\n\tconst textinp = document.querySelector('.popup__text');\r\n\tdocument.documentElement.classList.add('popup-show');\r\n\tpopup.classList.add('popup_show');\r\n\ttextinp.textContent = text;\r\n\tdocument.querySelector('.popup__close').addEventListener('click', (e) => {\r\n\t\te.preventDefault();\r\n\t\tdocument.documentElement.classList.remove('popup-show');\r\n\t\tpopup.classList.remove('popup_show');\r\n\t})\r\n}\r\n//ScrollOnClick (Simple)\r\n// по факту нужно только pageYOffset, остальное устарело\r\nfunction currentYPosition() {\r\n\t// Firefox, Chrome, Opera, Safari\r\n\tif (window.pageYOffset) return window.pageYOffset;\r\n\t// Internet Explorer 6 - standards mode\r\n\tif (document.documentElement && document.documentElement.scrollTop) {\r\n\t\treturn document.documentElement.scrollTop;\r\n\t}\r\n\t// Internet Explorer 6, 7 and 8\r\n\tif (document.body.scrollTop) return document.body.scrollTop;\r\n\treturn 0;\r\n}\r\n\r\n// стандартно получаем координаты блока с ошибкой\r\nfunction getCoords(elem) {\r\n\tlet box = elem.getBoundingClientRect();\r\n\treturn {\r\n\t\ttop: box.top + window.pageYOffset,\r\n\t\tright: box.right + window.pageXOffset,\r\n\t\tbottom: box.bottom + window.pageYOffset,\r\n\t\tleft: box.left + window.pageXOffset\r\n\t};\r\n}\r\n\r\nfunction smoothScroll(firstErr) {\r\n\tconst startY = currentYPosition();\r\n\tconst stopY = getCoords(firstErr).top;\r\n\t// дистанция на которую надопрокрутить\r\n\tlet distance = stopY > startY ? stopY - startY : startY - stopY;\r\n\tif (distance < 100) {\r\n\t\twindow.scrollTo(0, stopY);\r\n\t\treturn;\r\n\t}\r\n\tlet speed = Math.round(distance / 100);\r\n\tif (speed >= 20) { speed = 20 } else { speed = 30 }\r\n\tconst step = Math.round(distance / 25);\r\n\t// если место кнопки submit больше, чем место ошибки, вычитаем шаги\r\n\tlet leapY = stopY > startY ? startY + step : startY - step;\r\n\tlet timer = 0;\r\n\t// если ошибка больше кнопки\r\n\tif (stopY > startY) {\r\n\t\tfor (let i = startY; i < stopY; i += step) {\r\n\t\t\tsetTimeout(`window.scrollTo(0,${leapY})`, timer * speed);\r\n\t\t\tleapY += step; if (leapY > stopY) leapY = stopY; timer++;\r\n\t\t}\r\n\t}\r\n\t// если кнопка больше ошибки\r\n\tfor (let i = startY; i > stopY; i -= step) {\r\n\t\tsetTimeout(window.scrollTo.bind(null, 0, leapY), timer * speed);\r\n\t\tleapY -= step;\r\n\t\tif (leapY < stopY) leapY = stopY;\r\n\t\ttimer++;\r\n\t}\r\n\r\n}\r\n\r\n//Placeholers\r\n// при фокусе навешивает focus на input и parentelement\r\nlet inputs = document.querySelectorAll('input[data-value],textarea[data-value]');\r\ninputs_init(inputs);\r\nfunction inputs_init(inputs) {\r\n\tif (inputs.length > 0) {\r\n\t\tinputs.forEach(input => {\r\n\t\t\tconst dataValue = input.getAttribute('data-value');\r\n\t\t\t// записываем значение аттриботу в плейсхолдер\r\n\t\t\tinput_placeholder_add(input);\r\n\t\t\t// при фокусе накидываем классы фокуса и обнуляем значение\r\n\t\t\tinput.addEventListener('focus', function (e) {\r\n\t\t\t\tif (input.value == dataValue) {\r\n\t\t\t\t\tinput_focus_add(input);\r\n\t\t\t\t\tinput.value = '';\r\n\t\t\t\t}\r\n\t\t\t\t// при подключении через npm inputmask можно задать маски для разных полей\r\n\t\t\t\t// if (input.classList.contains('_phone')) {\r\n\t\t\t\t// \tinput.classList.add('_mask');\r\n\t\t\t\t// \tInputmask(\"+375 (99) 9999999\", {\r\n\t\t\t\t// \t\t\"placeholder\": '',\r\n\t\t\t\t// \t\tclearIncomplete: true,\r\n\t\t\t\t// \t\tclearMaskOnLostFocus: true,\r\n\t\t\t\t// \t\tonincomplete: function () {\r\n\t\t\t\t// \t\t\tinput_clear_mask(input, input_g_value);\r\n\t\t\t\t// \t\t}\r\n\t\t\t\t// \t}).mask(input);\r\n\t\t\t\t// }\r\n\t\t\t\t// убриаем ошибки\r\n\t\t\t\tformRemoveError(input);\r\n\t\t\t});\r\n\t\t\t// при потере фокуса убираем классы фокуса и добавляем значение\r\n\t\t\tinput.addEventListener('blur', function (e) {\r\n\t\t\t\tif (input.value == '') {\r\n\t\t\t\t\tinput.value = dataValue;\r\n\t\t\t\t\tinput_focus_remove(input);\r\n\t\t\t\t\tif (input.getAttribute('data-type') === \"pass\") {\r\n\t\t\t\t\t\tinput.setAttribute('type', 'text');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t})\r\n\t}\r\n}\r\nfunction input_placeholder_add(input) {\r\n\tconst dataValue = input.getAttribute('data-value');\r\n\tif (dataValue != '') {\r\n\t\tinput.value = dataValue;\r\n\t}\r\n}\r\nfunction input_focus_add(input) {\r\n\tinput.classList.add('focus');\r\n\tinput.parentElement.classList.add('focus');\r\n}\r\nfunction input_focus_remove(input) {\r\n\tinput.classList.remove('focus');\r\n\tinput.parentElement.classList.remove('focus');\r\n}\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/validationForms.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;